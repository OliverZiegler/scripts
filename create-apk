#!/bin/bash

# Must be called from the app's root folder!

# For automated signing:
# 	Create a file called release-signing.properties and put in APPFOLDER/platforms/android folder
# 	Contents of the file: edit after = for all except storeType
	# 	storeFile=C:/yourlocation/app.keystore (e.g. /Users/.signing/)
	# 	storeType=jks
	# 	keyAlias=aliasname
	# 	keyPassword=aliaspass
	# 	storePassword=password

# Params
#	r: create release apk
#	i: install
#	o: open apk folder after creation

openInFolder=false;
deploy=false;
signingConfig=debug;

for var in "$@"
do
    if [[ $var == *"i"* ]]; then
        deploy=true;
    echo Will deploy the created apk after.
    else echo Won\'t deploy the created apk after.
    fi

    if [[ $var == *"r"* ]]; then
        signingConfig=release;
        echo Will build $signingConfig apk;
    fi

    if [[ $var == *"o"* ]]; then
        openInFolder=true;
        echo Will show apk folder after creation.
    else echo Won\'t show apk folder after creation.
    fi

done


# Make sure that everything is up to date (pull beforehand, if necessary)
# (proxy is used in camigolo; add-proxy and remove-proxy can be found in the project's gulpfile)
gulp # && gulp remove-proxy;

#Build release or debug apk, automatically using the signing data from release-signing.properties (see above)
ionic build android --$signingConfig;

# Gather data for automatic file naming.
name=${PWD##*/};
tempPath=./platforms/android/build/outputs/apk/android-$signingConfig.apk;
versionCode=`aapt dump badging $tempPath | grep versionCode | awk '{print $3}' | sed s/versionCode=//g | sed s/\'//g`;
versionName=`aapt dump badging $tempPath | grep versionName | awk '{print $4}' | sed s/versionName=//g | sed s/\'//g`;
version=$versionName"_"$versionCode;

[[ -d ./apk-$signingConfig ]] || mkdir ./apk-$signingConfig # Create folder, if necessary
filePath=./apk-$signingConfig/$name-$signingConfig-$version.apk;
cp $tempPath $filePath; #copy and rename new release-apk.

aapt dump badging $tempPath | grep versionCode; #Log versionCode

if [ "$deploy" = true ]; then
    echo Deploying apk!;
    adb install -r $filePath;
fi

if [ "$openInFolder" = true ]; then
	open ./apk-$signingConfig; #OS X
	xdg-open ./apk-$signingConfig; #Linux
fi